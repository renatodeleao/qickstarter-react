/*
    TOOLS.FUNCTIONS
    ----

    Global, app-wide helper functions
    Some are just shortcuts to avoid verbosity
    and remember map names.
==================================================== */



/*
    getAppColor()
    ----

    retrives a color from the app-color-maps defined at _global.scss
    tone defaults to base, i want another, pass as second argument.
    Plicas are optional.

    Depends on:
    	sassy-maps
        _s.colors.scss
       

    How to use:
    getAppColor('primary') === getColor('primary', 'base')
    getAppColor('primary', 'light') retrieves light variation
*/

@function getAppColor($color, $tone: "base") {
    @if map-has-key($app-color-maps, $color) {
        @return map-get-deep($app-color-maps, $color, $tone);
    }

    @if map-has-key($color, $tone){
        //Is single value
        @return map-get-deep($app-color-maps, $color, $tone);
    } @else {
        //Is single value
        @return map-get($app-color-maps, $color);
    }
    //else
    @error "`#{$color}` is not in $app-color-maps. Check _global.scss";
    @return false;
}


@function getSocialMediaColor($name, $tone: "base"){
    @if map-has-key($social-media-color-maps, $name) {

        @if map-has-key($name, $tone){
            @return map-get-deep($social-media-color-maps, $color, $tone);
        } @else {
            //Is single value
            @return map-get($social-media-color-maps, $name);
        }
       
    }
    //else
    @error "`#{$color}` is not in $app-color-maps. Check _global.scss";
    @return false;
}




/*
    getTransition()
    ----
	
	just to avoid verbosity of map-get($transition-map-name);

*/

@function getTransition($map: $transitions-map, $transition: 'smooth') {
    @if map-has-key($map, $transition) {
        @return map-get($transitions-map, $transition);
    }
    //else
    @error "`#{$transition}` is not in #{$map}. Check settings folder, maybe you mispelled a key";
 }

